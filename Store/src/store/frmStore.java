/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package store;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
 *
 * @author alexu
 */
public class frmStore extends javax.swing.JFrame {

    /**
     * Creates new form frmStore
     */
    public frmStore() {
        initComponents();
        UpdateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDataViewer = new javax.swing.JTable();
        btnEditData = new javax.swing.JButton();
        btnDeleteData = new javax.swing.JButton();
        btnSaveData = new javax.swing.JButton();
        txtGetProviderName = new javax.swing.JTextField();
        txtGetProductName = new javax.swing.JTextField();
        txtGetProductPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTableDataViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID producto", "Nombre", "Precio", "ID proveedor", "Nombre del proveedor"
            }
        ));
        jScrollPane1.setViewportView(jTableDataViewer);

        btnEditData.setText("Editar");
        btnEditData.setFocusable(false);
        btnEditData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDataActionPerformed(evt);
            }
        });

        btnDeleteData.setText("Eliminar");
        btnDeleteData.setFocusable(false);
        btnDeleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDataActionPerformed(evt);
            }
        });

        btnSaveData.setText("Guardar");
        btnSaveData.setFocusable(false);
        btnSaveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDataActionPerformed(evt);
            }
        });

        txtGetProviderName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre del proveedor"));

        txtGetProductName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre del producto"));

        txtGetProductPrice.setBorder(javax.swing.BorderFactory.createTitledBorder("Precio del producto"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtGetProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(txtGetProviderName))
                    .addComponent(txtGetProductPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveData, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                        .addComponent(btnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(btnDeleteData, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtGetProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(txtGetProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(txtGetProviderName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveData, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteData, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDataActionPerformed

        if(txtGetProductName.getText().trim().equals("") || txtGetProductPrice.getText().trim().equals("") || txtGetProviderName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Error: faltan datos", "Pelotudo", JOptionPane.WARNING_MESSAGE);
        }else{
            String productname = txtGetProductName.getText().trim();
            float productprice = Float.parseFloat(txtGetProductPrice.getText().trim());
            String providername = txtGetProviderName.getText().trim();

            InsertToDB.InsertValues(productname, productprice, providername);
        }
        UpdateTable();
        clearTextFields();
    }//GEN-LAST:event_btnSaveDataActionPerformed

    private void btnEditDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDataActionPerformed

        String selectedId = jTableDataViewer.getValueAt(jTableDataViewer.getSelectedRow(), 4).toString();
        String productName = jTableDataViewer.getValueAt(jTableDataViewer.getSelectedRow(), 1).toString();
        String productPrice = jTableDataViewer.getValueAt(jTableDataViewer.getSelectedRow(), 2).toString();
        String providerName = jTableDataViewer.getValueAt(jTableDataViewer.getSelectedRow(), 3).toString();

        txtGetProductName.setText(productName);
        txtGetProductPrice.setText(productPrice);
        txtGetProviderName.setText(providerName);


        if(txtGetProductName.getText().trim().equals("") || txtGetProductPrice.getText().trim().equals("") || txtGetProviderName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Error: faltan datos", "Pelotudo", JOptionPane.WARNING_MESSAGE);
        }else{
            String productname = txtGetProductName.getText().trim();
            float productprice = Float.parseFloat(txtGetProductPrice.getText().trim());
            String providername = txtGetProviderName.getText().trim();

            try{
                UpdateData.UpdateValues(selectedId, productname, productprice, providername);
                JOptionPane.showMessageDialog(null, "Datos actualizados");
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Error: " + ex);
            }
        }
        UpdateTable();
        clearTextFields();
    }

    private void btnDeleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDataActionPerformed
        String selectedId = jTableDataViewer.getValueAt(jTableDataViewer.getSelectedRow(), 4).toString();
        try{
            DeleteData.DeleteFromDB(selectedId);
            UpdateTable();
            JOptionPane.showMessageDialog(null, "Dato eliminado correctamente");
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }

    public void UpdateTable(){
        DefaultTableModel myTableModel = new DefaultTableModel();
        myTableModel = (DefaultTableModel) jTableDataViewer.getModel();
        myTableModel.getDataVector().removeAllElements();
        jTableDataViewer.updateUI();
        
        ResultSet rs = null;
        Statement st = null;
        String query = "SELECT tbl_product.*, tbl_providers.providername FROM tbl_providers INNER JOIN tbl_product ON tbl_providers.idprovider = tbl_product.idprovider;";
        
        try {
            st = CreateConnection.getDbConnection().createStatement();
            rs = st.executeQuery(query);
            CreateConnection.getDbConnection().close();
            
            while(rs.next()){
                myTableModel.addRow(new Object[]{
                    rs.getInt("idproduct"),
                    rs.getString("productname"),
                    rs.getFloat("price"),
                    rs.getInt("idprovider"),
                    rs.getString("providername")
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }
    
    private void clearTextFields(){
        txtGetProductName.setText("");
        txtGetProductPrice.setText("");
        txtGetProviderName.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmStore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteData;
    private javax.swing.JButton btnEditData;
    private javax.swing.JButton btnSaveData;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDataViewer;
    private javax.swing.JTextField txtGetProductName;
    private javax.swing.JTextField txtGetProductPrice;
    private javax.swing.JTextField txtGetProviderName;
    // End of variables declaration//GEN-END:variables
}
